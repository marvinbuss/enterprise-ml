{
	"name": "Score",
	"properties": {
		"description": "Pipeline for scoring data.",
		"activities": [
			{
				"name": "InvokeBatchScorePipeline",
				"description": "Invoke the batch scoring pipeline.",
				"type": "AzureMLExecutePipeline",
				"dependsOn": [
					{
						"activity": "CopyScoreData",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "InvokeBatchScorePipelineRest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"experimentName": "batch-endpoint-diabetes",
					"mlPipelineParameters": {
						"NodeCount": "2",
						"mini_batch_size": "2",
						"run_max_try": "3",
						"run_invocation_timeout": "300",
						"logging_level": "INFO",
						"append_row_file_name": "predictions.csv",
						"dataset_param": "{\n    \"JobInputType\" : \"UriFolder\",\n    \"Uri\": \"azureml:diabetes_score@latest\"\n}"
					},
					"mlPipelineId": "67328e51-6b86-4a9b-9f87-1ffb0941c775",
					"dataPathAssignments": {
						"UriFolder": {
							"jobInputType": "UriFolder",
							"mode": "ReadOnlyMount",
							"uri": "/subscriptions/757c4165-0823-49f7-9678-5a85fe5e17cc/resourceGroups/e2e_aml_ref_imp_ds_rg/providers/Microsoft.MachineLearningServices/workspaces/entml-dev-machinelearning001/data/diabetes_score/versions/1"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "azureml001",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "CopyScoreData",
				"description": "Copy score data into destination.",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@pipeline().parameters.filePathSource",
								"type": "Expression"
							},
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "AGE",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "AGE",
									"type": "Int64",
									"physicalType": "INT_64"
								}
							},
							{
								"source": {
									"name": "SEX",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "SEX",
									"type": "Int64",
									"physicalType": "INT_64"
								}
							},
							{
								"source": {
									"name": "BMI",
									"type": "Double",
									"physicalType": "DOUBLE"
								},
								"sink": {
									"name": "BMI",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "MAP",
									"type": "Double",
									"physicalType": "DOUBLE"
								},
								"sink": {
									"name": "MAP",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "TC",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "TC",
									"type": "Int64",
									"physicalType": "INT_64"
								}
							},
							{
								"source": {
									"name": "LDL",
									"type": "Double",
									"physicalType": "DOUBLE"
								},
								"sink": {
									"name": "LDL",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "HDL",
									"type": "Double",
									"physicalType": "DOUBLE"
								},
								"sink": {
									"name": "HDL",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "TCH",
									"type": "Double",
									"physicalType": "DOUBLE"
								},
								"sink": {
									"name": "TCH",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "LTG",
									"type": "Double",
									"physicalType": "DOUBLE"
								},
								"sink": {
									"name": "LTG",
									"type": "Double",
									"physicalType": "DOUBLE"
								}
							},
							{
								"source": {
									"name": "GLU",
									"type": "Int64",
									"physicalType": "INT64"
								},
								"sink": {
									"name": "GLU",
									"type": "Int64",
									"physicalType": "INT_64"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DiabetesScore",
						"type": "DatasetReference",
						"parameters": {
							"filePath": "source"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DiabetesScore",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.filePathDestination",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "InvokeBatchScorePipelineRest",
				"description": "Invoke the batch scoring pipeline using REST.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "CopyScoreData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().parameters.endpointUri",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"properties": {
							"InputData": {
								"UriFolder": {
									"jobInputType": "UriFolder",
									"uri": "/subscriptions/757c4165-0823-49f7-9678-5a85fe5e17cc/resourceGroups/e2e_aml_ref_imp_ds_rg/providers/Microsoft.MachineLearningServices/workspaces/entml-dev-machinelearning001/data/diabetes_score/versions/1"
								}
							}
						}
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://ml.azure.com"
					}
				}
			}
		],
		"parameters": {
			"endpointUri": {
				"type": "string",
				"defaultValue": "https://batch-endpoint-diabetes.northeurope.inference.ml.azure.com/jobs"
			},
			"apiVersion": {
				"type": "string",
				"defaultValue": "2022-10-01"
			},
			"pollInterval": {
				"type": "string",
				"defaultValue": "120"
			},
			"inputPath": {
				"type": "string",
				"defaultValue": "azureml:diabetes_score@latest"
			},
			"filePathSource": {
				"type": "string",
				"defaultValue": "source"
			},
			"filePathDestination": {
				"type": "string",
				"defaultValue": "datasets/diabetes/score"
			}
		},
		"annotations": []
	}
}